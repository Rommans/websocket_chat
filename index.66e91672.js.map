{"mappings":"AAAA,MAAMA,WAAa,IAAIC,UAAU,2CACjC,IAAIC,SACAC,OAAS,EAEbH,WAAWI,OAAM,KACbC,QAAQC,IAAI,aACZJ,SAAWK,OAAO,kBAAmB,SAAW,aAGpDP,WAAWQ,QAAO,KACdH,QAAQI,MAAM,iBAGlBT,WAAWU,QAAUD,IACjBJ,QAAQI,MAAM,oBAAqBA,IAGvCT,WAAWW,UAAYC,IACnB,IAAIC,EAAMC,KAAKC,MAAMH,EAAMI,MAG3B,GAFkBC,SAASC,cAAc,WAC7BC,YAAW,GAAMN,EAAIV,gBACdiB,MAAhBP,EAAIX,SAAsB,CACzB,IAAImB,EAAmBJ,SAASC,cAAc,SAC1CI,EAAKL,SAASM,cAAc,OAChCD,EAAGE,aAAa,QAAS,uBACzBF,EAAGG,UAAS,wBACCZ,EAAIX,2DACcW,EAAIa,gDACTb,EAAIc,yBAE9BN,EAAiBO,YAAYN,KAIrCL,SAASC,cAAc,QAAQW,iBAAiB,UAAUjB,IACtDA,EAAMkB,iBACN,IAAIJ,EAAUT,SAASC,cAAc,YAAYa,MACjD,GAAGL,EAAQM,QAAUN,EAAQO,OAAO,CAChC,IAAIC,GAAO,IAAIC,MAAOC,mBAAmB,GAAI,CACzCC,QAAQ,IAERC,EAAM,CACNpC,SAAUA,SACVwB,QAASA,EACTC,KAAMO,GAEVlC,WAAWuC,KAAKzB,KAAK0B,UAAUF,IAC/BG,WAAWf,GACXT,SAASC,cAAc,YAAYa,MAAQ,OAInD,MAAMU,WAAcf,IAChB,IAAIQ,GAAO,IAAIC,MAAOC,mBAAmB,GAAI,CAAEC,QAAQ,IACnDhB,EAAmBJ,SAASC,cAAc,SAC1CI,EAAKL,SAASM,cAAc,OAChCD,EAAGE,aAAa,QAAS,oBACzBF,EAAGG,UAAS,sBACGvB,sDACewB,wCACFQ,oBAE5Bb,EAAiBO,YAAYN,GAC7BD,EAAiBqB,UAAYrB,EAAiBsB","sources":["client/chat.js"],"sourcesContent":["const connection = new WebSocket('wss://websocket-chat-backend1.glitch.me');\r\nlet username;\r\nlet online = 0;\r\n\r\nconnection.onopen = () => {\r\n    console.log('connected');\r\n    username = prompt('Input your name', 'User') || 'Anonymous';\r\n};\r\n\r\nconnection.onclose = () => {\r\n    console.error('disconnected');\r\n};\r\n\r\nconnection.onerror = error => {\r\n    console.error('failed to connect', error);\r\n};\r\n\r\nconnection.onmessage = event => {\r\n    let obj = JSON.parse(event.data)\r\n    let onlineUsers = document.querySelector('.online');\r\n    onlineUsers.textContent = `${obj.online} ONLINE`;\r\n    if(obj.username != undefined){\r\n        let messageContainer = document.querySelector('#chat');\r\n        let el = document.createElement('div');\r\n        el.setAttribute('class', 'other-message_block');\r\n        el.innerHTML = `\r\n            <label>${obj.username}:</label>\r\n            <p class=\"other-message\">${obj.message}</p>\r\n            <label class=\"time\">${obj.date}</label>\r\n        `;\r\n        messageContainer.appendChild(el);\r\n    }\r\n};\r\n\r\ndocument.querySelector('form').addEventListener('submit', event => {\r\n    event.preventDefault();\r\n    let message = document.querySelector('#message').value;\r\n    if(message.length && message.trim()){\r\n        let time = new Date().toLocaleTimeString([], {\r\n            hour12: false\r\n        });\r\n        let msg = {\r\n            username: username,\r\n            message: message,\r\n            date: time\r\n        };\r\n        connection.send(JSON.stringify(msg));\r\n        ownMessage(message)\r\n        document.querySelector('#message').value = '';\r\n    }\r\n});\r\n\r\nconst ownMessage = (message) => {\r\n    let time = new Date().toLocaleTimeString([], { hour12: false });\r\n    let messageContainer = document.querySelector('#chat');\r\n    let el = document.createElement('div');\r\n    el.setAttribute('class', 'my-message_block');\r\n    el.innerHTML = `\r\n          <label>${username}:</label>\r\n          <p class=\"my-message\">${message}</p>\r\n          <label class=\"time\">${time}</label>\r\n      `;\r\n    messageContainer.appendChild(el);\r\n    messageContainer.scrollTop = messageContainer.scrollHeight;\r\n}"],"names":["connection","WebSocket","username","online","onopen","console","log","prompt","onclose","error","onerror","onmessage","event","obj","JSON","parse","data","document","querySelector","textContent","undefined","messageContainer","el","createElement","setAttribute","innerHTML","message","date","appendChild","addEventListener","preventDefault","value","length","trim","time","Date","toLocaleTimeString","hour12","msg","send","stringify","ownMessage","scrollTop","scrollHeight"],"version":3,"file":"index.66e91672.js.map"}